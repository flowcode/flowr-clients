<?php

namespace Flower\ClientsBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr\Join;

/**
 * AccountRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AccountRepository extends EntityRepository
{

    public function search($qbOriginal, $completeText, $texts, $limit = 10)
    {
        $qb = $qbOriginal;
        $qb->orWhere("a.id = :text")
            ->setParameter("text", $completeText);
        $qb->setMaxResults($limit);
        $result = $qb->getQuery()->getResult();
//
        $qb = $qbOriginal;
        $qb->andWhere("a.name like :text OR a.businessName like :text OR a.id like :text OR a.cuit like :text OR a.phone like :text ")
            ->setParameter("text", "%" . $completeText . "%");
        $qb->setMaxResults($limit);
        $result = array_merge($result, $qb->getQuery()->getResult());
        $qb = $qbOriginal;
        $count = 0;
        $orWhere = "";
        foreach ($texts as $text) {
            $orWhere .= " a.name like :text_" . $count. " OR a.businessName like :text_" . $count. " OR a.cuit like :text_" . $count. " OR a.phone like :text_" . $count;
            $qb->setParameter("text_" . $count, "%" . $text . "%");
            $count++;
        }
        $qb->andWhere($orWhere);
        $qb->setMaxResults($limit);
        $result = array_merge($result, $qb->getQuery()->getResult());
        return array_unique($result, SORT_REGULAR);
    }

    public function getFindAllQueryBuilder($alias = "a"){
        $qb = $this->createQueryBuilder($alias);

        return $qb;
    }
    public function findByBoard($board)
    {
        $qb = $this->createQueryBuilder("a");
        $qb->join("a.boards", "b");
        $qb->where("b.id = :board")->setParameter("board", $board->getId());
        $querry = $qb->getQuery();
        return $querry->getOneOrNullResult();
    }

}
